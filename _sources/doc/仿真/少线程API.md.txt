## 少线程API(Thread-less API)

也有一些函数帮助你避免线程的使用, 但是仍会允许你控制仿真时间流。

|          少线程函数          |                            描述                             |
| :--------------------------: | :---------------------------------------------------------: |
| `delayed(delay){ callback }` | 存下在当前时间步之后的`delay`仿真时间步时被调用的回调代码块 |

相比于用一般仿真线程+睡眠, `delayed`函数的优势：

+ 性能(没有上下文切换)
+ 存储空间的利用(没有本地JVM线程存储空间的收集)

一些与`ClockDomain`相关的其他少线程函数都记录在"Callback API"模块中, 其他与delta-cycle相关的处理过程记录在"Sensitive API"中。
