## 参数化(Parametrization)

### 一、简介(Introduction)

SpinalHDL的参数化概念涉及多个方面：

+ 给设计提供细化阶段(elaboration time)的参数
+ 可选择的硬件生成

### 二、细化阶段的参数(Elaboration time parameters)

你可以用整个Scala语言来提供细化时间时的参数。

下面是类参数的例子：

```Scala
case class MyBus(width: Int) extends Bundle {
    val mySignal = UInt(width bits)
}
```

```Scala
case class MyComponent(width: Int) extends Component {
    val bus = MyBus(width)
}
```

你也可以在scala对象中定义全局变量, 但是需要注意最近增加的ScopeProperty特点能提供更好的解决办法。

### 三、可选择的硬件生成(Optional hardware)

这里有很多可能性。

对于可选择的信号：

```Scala
case class MyComponent(flag: Boolean) extends Component {
    val mySignal = flag generate (Bool())   //等价于"if(flag) in Bool() else null"
}
```

你也可以在Bundle中做相同的事情。

> 备注：你也可以用Scala选项。

如果你想无效一块硬件的生成：

```Scala
case class MyComponent(flag: Boolean) extends Component {
    val myHardware = flag generate new Area {
        //可选择的电路
    }
}
```

你也可以用scala循环：

```Scala
case class MyComponent(amount: Int) extends Component {
    val myHardware = for(i <- 0 until amount) yield new Area {
        //可选择的电路
    }
}
```

所以, 在细化期间你想怎么运用Scala就怎么运用, 包括始终整个Scala集合(List, Set, Map, ...)来搭建数据模型并把他们以程序的方式转化成硬件(例如对列表元素迭代)。
